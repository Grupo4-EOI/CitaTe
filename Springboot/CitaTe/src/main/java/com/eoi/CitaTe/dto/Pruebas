service: package com.eoi.CitaTe.services;


         import com.eoi.CitaTe.abstraccomponents.GenericServiceConJPA;
         import com.eoi.CitaTe.dto.PagoDTO;
         import com.eoi.CitaTe.entities.Pago;
         import com.eoi.CitaTe.repositories.PagoRepository;
         import org.springframework.beans.factory.annotation.Autowired;
         import org.springframework.stereotype.Service;

         @Service
         public class PagoService extends GenericServiceConJPA<Pago, Long> {

             private final PagoRepository pagoRepository;

             public PagoService(PagoRepository pagoRepository) {
                 this.pagoRepository = pagoRepository;
             }


             // @GetMapping("/create")
           // public String crearPago (Model model){


           //     DisponibilidadDTO disponibilidadDTO = new DisponibilidadDTO();
           //     model.addAttribute("disponibilidadDTO", disponibilidadDTO);

           //     disponibilidadService.crearDisponibilidad(disponibilidadDTO);

           //     return "";
           // }

             public  void CrearPago (PagoDTO pagoDTO){

                 Pago pago = new Pago();

                 pago.setId(pagoDTO.getId());

                 pagoRepository.save(pago);
             }

         }
Controller


package com.eoi.CitaTe.controllers;

import com.eoi.CitaTe.abstraccomponents.MiControladorGenerico;
import com.eoi.CitaTe.dto.PagoDTO;
import com.eoi.CitaTe.entities.Pago;
import com.eoi.CitaTe.repositories.PagoRepository;
import com.eoi.CitaTe.services.PagoService;
import jakarta.annotation.PostConstruct;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;

@Controller
@RequestMapping("${url.pago}")

public class PagoController extends MiControladorGenerico<Pago> {
    @Value("${url.pago}")
    private String urlBase;
    private String entityName = "pagos";

    public PagoController() {
        super();
    }

    @PostConstruct
    private void init() {
        super.entityName = entityName;
        super.url = url;
    }
    @Autowired
    private PagoService pagoService;


    @Autowired
    private PagoRepository pagoRepository;


    @GetMapping("/create")
    public String crearDisponibilidad(Model model){


        PagoDTO pagoDTO = new PagoDTO();
        model.addAttribute("pagodt", pagoDTO);


        pagoService.CrearPago(pagoDTO);




       // disponibilidadService.crearDisponibilidad(disponibilidadDTO);

        return "";
    }
    @GetMapping("/borrar")
    public String borrarDisponibilidad (Model model){

        return "";
    }
}
